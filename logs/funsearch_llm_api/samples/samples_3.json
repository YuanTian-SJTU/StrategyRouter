{"sample_order": 3, "strategy": "greedy", "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin with Greedy strategy.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    remaining_capacities = bins - item\n    valid_bins = remaining_capacities >= 0\n    priorities = np.zeros_like(bins)\n    priorities[valid_bins] = 1 / remaining_capacities[valid_bins]\n    return priorities\n\n", "score": -213.7}