{"sample_order": 12, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin with Best Fit strategy.\n\n    The Best Fit strategy places items in the bin that leaves the smallest residual space.\n    This strategy aims to minimize space wastage but may lead to early bin exhaustion.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    residual_space = bins - item\n    valid_bins = residual_space >= 0\n    priorities = np.where(valid_bins, -residual_space, np.inf)\n    return priorities\n\n", "score": -212.0}