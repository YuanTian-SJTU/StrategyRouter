{"sample_order": 5, "strategy": "first_fit", "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin with First Fit strategy.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    remaining_capacities = bins - item\n    valid_bins_mask = remaining_capacities >= 0\n    priorities = np.where(\n        valid_bins_mask,\n        -remaining_capacities,\n        np.inf\n    )\n    return priorities\n\n", "score": -212.0}