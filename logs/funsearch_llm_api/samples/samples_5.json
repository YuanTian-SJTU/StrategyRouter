{"sample_order": 5, "function": "def priority(item: float, bins: np.ndarray) -> np.ndarray:\n    \"\"\"Returns priority with which we want to add item to each bin with First Fit strategy.\n\n    The First Fit strategy places items in the first bin that can accommodate them.\n    This strategy is simple and fast but may not always lead to optimal bin utilization.\n\n    Args:\n        item: Size of item to be added to the bin.\n        bins: Array of capacities for each bin.\n\n    Return:\n        Array of same size as bins with priority score of each bin.\n    \"\"\"\n    valid_bins = bins >= item\n    priorities = np.where(valid_bins, 1, 0)\n    return priorities\n\n", "score": -212.75}