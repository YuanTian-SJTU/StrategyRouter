import numpy as np
# from ortools.constraint_solver import routing_enums_pb2
# from ortools.constraint_solver import pywrapcp
#
# def solve_tsp_ortools(dist_matrix):
#     """
#     Solve TSP using OR-Tools with faster solving strategies if Gurobi solver is not available.
#     """
#     # 将距离矩阵转换为整数（OR-Tools需要整数距离）
#     dist_matrix = np.round(dist_matrix * 1000).astype(int)
#
#     manager = pywrapcp.RoutingIndexManager(len(dist_matrix), 1, 0)
#     routing = pywrapcp.RoutingModel(manager)
#
#     def distance_callback(from_index, to_index):
#         from_node = manager.IndexToNode(from_index)
#         to_node = manager.IndexToNode(to_index)
#         return int(dist_matrix[from_node][to_node])
#
#     transit_callback_index = routing.RegisterTransitCallback(distance_callback)
#     routing.SetArcCostEvaluatorOfAllVehicles(transit_callback_index)
#
#     search_parameters = pywrapcp.DefaultRoutingSearchParameters()
#     # 使用更快的初始解策略
#     search_parameters.first_solution_strategy = (
#         routing_enums_pb2.FirstSolutionStrategy.SAVINGS)
#     # 使用更快的局部搜索策略
#     search_parameters.local_search_metaheuristic = (
#         routing_enums_pb2.LocalSearchMetaheuristic.GREEDY_DESCENT)
#     # 减少时间限制到10秒
#     search_parameters.time_limit.FromSeconds(10)
#     # 减少搜索深度
#     search_parameters.solution_limit = 1
#
#     solution = routing.SolveWithParameters(search_parameters)
#
#     if solution:
#         index = routing.Start(0)
#         route_distance = 0
#         while not routing.IsEnd(index):
#             previous_index = index
#             index = solution.Value(routing.NextVar(index))
#             route_distance += routing.GetArcCostForVehicle(previous_index, index, 0)
#         # 将距离转换回浮点数
#         return float(route_distance) / 1000.0
#     return None

def get_cities_and_dist_matrix(instance):
    """
    Extract cities and distance matrix from the instance.
    """
    coords_dict = instance['coords']
    # 按编号顺序排列
    keys = sorted(coords_dict.keys(), key=lambda x: int(x))
    cities = np.array([coords_dict[k] for k in keys], dtype=float)
    dist_matrix = np.sqrt(((cities[:, None, :] - cities[None, :, :]) ** 2).sum(axis=2))
    return cities, dist_matrix

datasets = {}

datasets['tsp20'] = {
    'tsp20_00':{
        'cities': 20, 'start': (0, 0), 'Gurobi': 765.689872004948, 'coords': {
        '0': (-4, 5), '1': (17, 76), '2': (-9, 0), '3': (-31,-86), '4': (53, -35), '5': (26, 91), '6': (65, -33),
        '7': (26, 86), '8': (-13, -70), '9': (13, 79), '10': (-73,-86), '11': (-45, 93), '12': (74, 24),
        '13': (67, -42), '14': (87, 51), '15': (83, 94), '16': (-7, 52), '17':(-89, 47), '18': (0, -38), '19': (61, 58),
        }
    }
}

datasets['tsp50'] = {
    'tsp50_00': {
        'cities': 50, 'start': (0, 0), 'Gurobi': 1179.71,
        'coords': {
            '0': (-45, 54), '1': (53, -55), '2': (5, 61), '3': (57, 70), '4': (44, -2), '5': (16, -89), '6': (95, 92), '7': (61, 86), '8': (-23, -22), '9': (25, -4), '10': (-26, 9), '11': (-45, 48), '12': (45, -41), '13': (91, -49), '14': (-63, -24), '15': (-38, -95), '16': (25, 71), '17': (-67, 55), '18': (96, -74), '19': (-100, -9), '20': (38, -81), '21': (-18, -87), '22': (47, -13), '23': (-77, 66), '24': (-39, 6), '25': (-39, 16), '26': (81, 50), '27': (-41, -90), '28': (-95, -31), '29': (-3, -98), '30': (45, 11), '31': (68, -21), '32': (-11, -39), '33': (57, -12), '34': (26, -30), '35': (57, -20), '36': (-50, 87), '37': (82, -77), '38': (24, -38), '39': (0, -21), '40': (-1, 27), '41': (-49, -2), '42': (-33, -11), '43': (47, 74), '44': (-93, 46), '45': (78, 68), '46': (-46, -56), '47': (-27, 5), '48': (-99, 5), '49': (44, 46)
        }
    },
    'tsp50_01': {
        'cities': 50, 'start': (0, 0), 'Gurobi': 1224.72,
        'coords': {
            '0': (60, 96), '1': (83, -15), '2': (-94, 4), '3': (-3, -86), '4': (27, 75), '5': (60, -26), '6': (81, 83), '7': (80, 33), '8': (97, -69), '9': (34, -83), '10': (31, -71), '11': (-33, 28), '12': (44, -41), '13': (-24, 53), '14': (95, -19), '15': (-33, 1), '16': (1, -46), '17': (86, -24), '18': (-40, -56), '19': (-40, -90), '20': (-30, 46), '21': (-56, -75), '22': (93, 7), '23': (7, -80), '24': (80, 90), '25': (-57, -8), '26': (7, 93), '27': (29, -44), '28': (50, 63), '29': (-23, 8), '30': (-36, -35), '31': (68, 79), '32': (-96, -81), '33': (80, 95), '34': (-72, 26), '35': (-98, -84), '36': (-36, 81), '37': (-62, -86), '38': (-40, 34), '39': (58, 54), '40': (32, -80), '41': (14, -68), '42': (-43, 44), '43': (17, 17), '44': (-54, 60), '45': (-85, 38), '46': (32, 29), '47': (-81, -94), '48': (38, -72), '49': (68, -27)
        }
    },
    'tsp50_02': {
        'cities': 50, 'start': (0, 0), 'Gurobi': 1200.099,
        'coords': {
            '0': (-95, -18), '1': (98, 24), '2': (34, 79), '3': (-33, -76), '4': (-9, 23), '5': (35, 2), '6': (-23, 92), '7': (-40, 40), '8': (-74, 43), '9': (-41, 67), '10': (58, 6), '11': (20, 77), '12': (-33, -41), '13': (58, 64), '14': (-55, -71), '15': (37, -97), '16': (-42, 41), '17': (-32, -10), '18': (38, 40), '19': (29, -41), '20': (35, 37), '21': (-43, 18), '22': (5, -74), '23': (4, -58), '24': (78, 45), '25': (-52, 45), '26': (41, 14), '27': (-94, -45), '28': (83, 63), '29': (61, 63), '30': (20, 23), '31': (-35, -38), '32': (64, 48), '33': (-52, -17), '34': (69, 9), '35': (1, 30), '36': (15, -66), '37': (-100, -92), '38': (56, 92), '39': (-24, 91), '40': (36, -49), '41': (73, -41), '42': (16, -3), '43': (-41, 30), '44': (67, 52), '45': (-91, -67), '46': (9, -21), '47': (-44, 91), '48': (7, -84), '49': (-84, -70)
        }
    },
    'tsp50_03': {
        'cities': 50, 'start': (0, 0), 'Gurobi': 1084.423,
        'coords': {
            '0': (-56, -12), '1': (35, -41), '2': (-9, -53), '3': (20, 78), '4': (-16, -37), '5': (-56, -42), '6': (-58, -19), '7': (3, 45), '8': (30, 81), '9': (96, -37), '10': (-57, 1), '11': (-29, -24), '12': (-86, -33), '13': (94, -94), '14': (-91, -35), '15': (86, -49), '16': (-43, 17), '17': (-9, 25), '18': (-49, -41), '19': (-19, -53), '20': (-20, 9), '21': (-56, 58), '22': (52, -19), '23': (63, -92), '24': (-77, -43), '25': (62, 43), '26': (66, 41), '27': (77, 63), '28': (77, 10), '29': (-30, -59), '30': (-84, 96), '31': (98, 45), '32': (-51, -3), '33': (97, 53), '34': (0, 83), '35': (93, 66), '36': (-65, 88), '37': (12, -32), '38': (91, -87), '39': (15, -70), '40': (-10, -74), '41': (50, -38), '42': (89, -34), '43': (99, 15), '44': (-30, 16), '45': (-4, -23), '46': (-23, 66), '47': (-39, 76), '48': (-34, 54), '49': (-80, 99)
        }
    },
    'tsp50_04': {
        'cities': 50, 'start': (0, 0), 'Gurobi': 1233.837,
        'coords': {
            '0': (16, 11), '1': (-82, 99), '2': (-60, -14), '3': (54, -34), '4': (62, -17), '5': (-24, -70), '6': (-4, 12), '7': (11, -40), '8': (-44, 64), '9': (80, -69), '10': (72, 88), '11': (-99, -36), '12': (7, -49), '13': (60, 18), '14': (-81, 28), '15': (-99, -28), '16': (95, -14), '17': (92, -17), '18': (85, -98), '19': (-53, 92), '20': (55, 86), '21': (56, 10), '22': (36, -85), '23': (-30, 38), '24': (93, 2), '25': (72, 77), '26': (89, 2), '27': (-98, -36), '28': (-57, 8), '29': (-1, 19), '30': (-20, -80), '31': (-34, 84), '32': (-30, -12), '33': (83, -5), '34': (4, -94), '35': (69, -50), '36': (34, -27), '37': (74, -23), '38': (-41, -45), '39': (-1, -27), '40': (59, -46), '41': (-26, -47), '42': (-100, -50), '43': (15, -100), '44': (58, 65), '45': (-30, 28), '46': (-19, 13), '47': (-19, 78), '48': (69, -9), '49': (90, 24)
        }
    }
}

